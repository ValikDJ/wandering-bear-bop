import React, { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { CheckSquare, HelpCircle, ChevronDown } from "lucide-react";
import { Collapsible, CollapsibleContent, CollapsibleTrigger } from "@/components/ui/collapsible";
import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";
import { Link } from "react-router-dom";

interface ChecklistItem {
  id: string;
  text: string;
  completed: boolean;
}

interface CosmicMissionChecklistProps {
  onCompletionChange?: (completed: boolean) => void; // NEW: Callback for parent component
}

const LOCAL_STORAGE_KEY = "cosmic-mission-checklist-progress";

const initialChecklist: Omit<ChecklistItem, 'completed'>[] = [
  { id: "html-ready", text: "–Ø –º–∞—é —Å–≤—ñ–π HTML-—Ñ–∞–π–ª –∑ –¥–æ–º–∞—à–Ω—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è." },
  { id: "html-title", text: "–Ø –ø–µ—Ä–µ–≤—ñ—Ä–∏–≤ –Ω–∞–∑–≤—É —Å–≤–æ–≥–æ —Å–∞–π—Ç—É –≤ HTML." },
  { id: "html-nav", text: "–Ø –ø–µ—Ä–µ–≤—ñ—Ä–∏–≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó (`<nav>`) —Å–≤–æ–≥–æ —Å–∞–π—Ç—É." },
  { id: "html-headings-text", text: "–Ø –ø–µ—Ä–µ–≤—ñ—Ä–∏–≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (`<h2>`) —Ç–∞ —Ç–µ–∫—Å—Ç (`<p>`) —É —Å–≤–æ—î–º—É HTML." },
  { id: "html-images", text: "–Ø –ø–µ—Ä–µ–≤—ñ—Ä–∏–≤ –∫–∞—Ä—Ç–∏–Ω–∫–∏ (`<img>`) —É —Å–≤–æ—î–º—É HTML." },
  { id: "css-copied", text: "–Ø —Å–∫–æ–ø—ñ—é–≤–∞–≤ –±–∞–∑–æ–≤—ñ CSS-—Å—Ç–∏–ª—ñ —É –≤–∫–ª–∞–¥–∫—É CSS –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ Logika." },
  { id: "css-applied", text: "–Ø –∑–∞—Å—Ç–æ—Å—É–≤–∞–≤ –≤–∏–≤—á–µ–Ω—ñ CSS-–≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `color`, `background-color`, `font-size`, `margin`, `padding`, `border`, `border-radius`, `text-align`) –¥–æ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Å–≤–æ–≥–æ —Å–∞–π—Ç—É." },
  { id: "links-images-work", text: "–Ø –ø–µ—Ä–µ–≤—ñ—Ä–∏–≤, —á–∏ –≤—Å—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø—Ä–∞—Ü—é—é—Ç—å –ø—ñ—Å–ª—è —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—ó." },
  { id: "show-teacher", text: "–Ø –ø–æ–∫–∞–∑–∞–≤ —Å–≤—ñ–π —Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω–∏–π —Å–∞–π—Ç –≤—á–∏—Ç–µ–ª—é." },
];

const CosmicMissionChecklist: React.FC<CosmicMissionChecklistProps> = ({ onCompletionChange }) => {
  const [checklist, setChecklist] = useState<ChecklistItem[]>(() => {
    try {
      const stored = localStorage.getItem(LOCAL_STORAGE_KEY);
      if (stored) {
        return JSON.parse(stored);
      }
    } catch (error) {
      console.error("Failed to load cosmic mission checklist from localStorage:", error);
    }
    return initialChecklist.map(item => ({ ...item, completed: false }));
  });

  useEffect(() => {
    try {
      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(checklist));
    } catch (error) {
      console.error("Failed to save cosmic mission checklist to localStorage:", error);
    }
    const allItemsCompleted = checklist.every(item => item.completed);
    if (onCompletionChange) {
      onCompletionChange(allItemsCompleted);
    }
  }, [checklist, onCompletionChange]);

  const handleCheckboxChange = (id: string, checked: boolean) => {
    setChecklist(prev =>
      prev.map(item => (item.id === id ? { ...item, completed: checked } : item))
    );
  };

  const allItemsCompleted = checklist.every(item => item.completed);

  return (
    <Card className="mb-12 bg-card shadow-md animate-fade-in-up">
      <CardHeader>
        <CardTitle className="text-3xl font-bold text-foreground flex items-center gap-3">
          <CheckSquare className="h-8 w-8 text-primary" />
          –ß–µ–∫-–ª—ñ—Å—Ç –ö–æ—Å–º—ñ—á–Ω–æ–≥–æ –ê—Ä—Ö—ñ—Ç–µ–∫—Ç–æ—Ä–∞
        </CardTitle>
      </CardHeader>
      <CardContent>
        <p className="mb-4 text-muted-foreground">
          –ü–µ—Ä–µ–≤—ñ—Ä, —á–∏ –≤—Å–µ –≥–æ—Ç–æ–≤–æ –¥–æ –∑–∞–ø—É—Å–∫—É! –ü–æ–∑–Ω–∞—á –≤–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è:
        </p>
        <ul className="list-none space-y-3 mb-6">
          {checklist.map((item) => (
            <li key={item.id} className="flex items-center space-x-3">
              <Checkbox
                id={`cosmic-checklist-${item.id}`}
                checked={item.completed}
                onCheckedChange={(checked: boolean) => handleCheckboxChange(item.id, checked)}
                className="h-5 w-5 no-print"
              />
              <Label
                htmlFor={`cosmic-checklist-${item.id}`}
                className={cn(
                  "text-lg text-muted-foreground",
                  item.completed && "line-through text-muted-foreground/70"
                )}
              >
                {item.text}
              </Label>
            </li>
          ))}
        </ul>

        {allItemsCompleted && (
          <div className="mt-6 p-4 bg-green-100 text-green-800 border border-green-300 rounded-md text-center font-semibold">
            üéâ –ß—É–¥–æ–≤–æ! –í—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ! –¢–∏ –≥–æ—Ç–æ–≤–∏–π –¥–æ –∑–∞–ø—É—Å–∫—É! üéâ
          </div>
        )}

        <Collapsible className="mt-6">
          <CollapsibleTrigger asChild>
            <Button variant="outline" className="w-full justify-between text-lg font-semibold text-secondary-foreground hover:bg-secondary/80 no-print">
              <HelpCircle className="h-5 w-5 mr-2 text-destructive" />
              –ó–∞—Å—Ç—Ä—è–≥ —É –ö–æ—Å–º–æ—Å—ñ?
              <ChevronDown className="h-5 w-5 transition-transform data-[state=open]:rotate-180 chevron-icon" />
            </Button>
          </CollapsibleTrigger>
          <CollapsibleContent className="data-[state=open]:animate-collapsible-down data-[state=closed]:animate-collapsible-up overflow-hidden collapsible-content">
            <div className="p-4 border border-border rounded-b-md bg-muted mt-2 text-muted-foreground">
              <p className="mb-4">
                –ù–µ —Ö–≤–∏–ª—é–π—Å—è, –Ω–∞–≤—ñ—Ç—å –¥–æ—Å–≤—ñ–¥—á–µ–Ω—ñ –∫–æ—Å–º–æ–Ω–∞–≤—Ç–∏ —ñ–Ω–æ–¥—ñ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –¥–æ–ø–æ–º–æ–≥–∏! –Ø–∫—â–æ —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫:
              </p>
              <ul className="list-disc list-inside space-y-2">
                <li>**–ü–µ—Ä–µ–≤—ñ—Ä —Å–≤—ñ–π –∫–æ–¥:** –£–≤–∞–∂–Ω–æ –ø–µ—Ä–µ–≥–ª—è–Ω—å HTML —Ç–∞ CSS –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫ (–∑–∞–±—É—Ç—ñ `&lt;/div&gt;`, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ –Ω–∞–∑–≤–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π).</li>
                <li>**–ó–∞–ø–∏—Ç–∞–π —Å—É—Å—ñ–¥–∞:** –ú–æ–∂–ª–∏–≤–æ, —Ç–≤—ñ–π —Ç–æ–≤–∞—Ä–∏—à –ø–æ –º—ñ—Å—ñ—ó –≤–∂–µ —Å—Ç–∏–∫–∞–≤—Å—è –∑ —Ç–∞–∫–æ—é –ø—Ä–æ–±–ª–µ–º–æ—é.</li>
                <li>**–ü–æ–∫–ª–∏—á –≤—á–∏—Ç–µ–ª—è:** –¢–≤—ñ–π –∫–æ–º–∞–Ω–¥–∏—Ä –∑–∞–≤–∂–¥–∏ –≥–æ—Ç–æ–≤–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –∫—É—Ä—Å!</li>
                <li>**–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π –°–ª–æ–≤–Ω–∏–∫ –¢–µ—Ä–º—ñ–Ω—ñ–≤:** <Link to="/glossary" className="text-brand-primary hover:underline">–®–≤–∏–¥–∫–æ –∑–Ω–∞–π–¥–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ–∑—Ä–æ–∑—É–º—ñ–ª–∏—Ö —Å–ª—ñ–≤</Link>.</li>
                <li>**–ü–µ—Ä–µ–≥–ª—è–Ω—å –ü—Ä–∏–∫–ª–∞–¥–∏:** <Link to="/examples" className="text-brand-primary hover:underline">–ü–æ–¥–∏–≤–∏—Å—å, —è–∫ –ø—Ä–∞—Ü—é—é—Ç—å —ñ–Ω—à—ñ –ø—Ä–∏–∫–ª–∞–¥–∏</Link>.</li>
              </ul>
            </div>
          </CollapsibleContent>
        </Collapsible>
      </CardContent>
    </Card>
  );
};

export default CosmicMissionChecklist;