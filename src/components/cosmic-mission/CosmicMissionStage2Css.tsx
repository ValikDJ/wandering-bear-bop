import React, { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Prism as SyntaxHighlighter } from "react-syntax-highlighter";
import { atomDark } from "react-syntax-highlighter/dist/esm/styles/prism";
import { Copy, Palette, ChevronDown, Lightbulb, Plane } from "lucide-react";
import { toast } from "sonner";
import { Collapsible, CollapsibleContent, CollapsibleTrigger } from "@/components/ui/collapsible";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";
import { Link } from "react-router-dom";
import CosmicCssChallengeCard from "./CosmicCssChallengeCard";
import { cssChallenges, CosmicCssChallengeData } from "@/data/cosmicCssChallenges"; // NEW: Import from data file

interface CosmicMissionStage2CssProps {
  completed: boolean;
  onCompletionChange: (completed: boolean) => void;
  cosmicEnergy: number;
  decreaseCosmicEnergy: (amount: number, actionType: 'hint' | 'solution') => void;
  challengeCompletion: { [key: string]: boolean }; // NEW: Receive challenge completion state
  onChallengeCompletionChange: (id: string, isChecked: boolean) => void; // NEW: Receive handler
}

const LOCAL_STORAGE_KEY_STAGE2 = "cosmic-mission-stage2-completed";
// const LOCAL_STORAGE_KEY_CHALLENGES = "cosmic-css-challenges-progress"; // This key is now managed by parent

const cssTemplateUncommented = `/* style.css - –¢–≤–æ—ó –≤—ñ—Ä—Ç—É–∞–ª—å–Ω—ñ –ø–µ–Ω–∑–ª—ñ! */

/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è —Ç–µ–∫—Å—Ç—É */
color: #b3ffff;
font-size: 1.2em;
font-family: 'Arial', sans-serif;
text-align: center;
text-decoration: none;

/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è —Ñ–æ–Ω—É */
background-color: #2a2a4a;

/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è —Ä–∞–º–æ–∫ —Ç–∞ –∫—É—Ç—ñ–≤ */
border: 2px solid #8a2be2;
border-radius: 8px;

/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è –≤—ñ–¥—Å—Ç—É–ø—ñ–≤ */
margin: 20px;
padding: 15px;

/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è —Ä–æ–∑–º—ñ—Ä—ñ–≤ */
width: 100%;
height: auto;

/* –Ü–Ω—à—ñ –∫–æ—Ä–∏—Å–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ */
opacity: 0.8;
`;

const cssTemplateCommented = `/* style.css - –¢–≤–æ—ó –≤—ñ—Ä—Ç—É–∞–ª—å–Ω—ñ –ø–µ–Ω–∑–ª—ñ! */

/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è —Ç–µ–∫—Å—Ç—É */
color: #b3ffff; /* –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –∫–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É */
font-size: 1.2em; /* –í—Å—Ç–∞–Ω–æ–≤–ª—é—î —Ä–æ–∑–º—ñ—Ä —à—Ä–∏—Ñ—Ç—É */
font-family: 'Arial', sans-serif; /* –í—Å—Ç–∞–Ω–æ–≤–ª—é—î —Ç–∏–ø —à—Ä–∏—Ñ—Ç—É */
text-align: center; /* –í–∏—Ä—ñ–≤–Ω—é—î —Ç–µ–∫—Å—Ç –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∞ (left, right, center, justify) */
text-decoration: none; /* –î–æ–¥–∞—î –∞–±–æ –≤–∏–¥–∞–ª—è—î –ª—ñ–Ω—ñ—ó –ø—ñ–¥ —Ç–µ–∫—Å—Ç–æ–º (none, underline, line-through) */

/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è —Ñ–æ–Ω—É */
background-color: #2a2a4a; /* –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É –µ–ª–µ–º–µ–Ω—Ç–∞ */

/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è —Ä–∞–º–æ–∫ —Ç–∞ –∫—É—Ç—ñ–≤ */
border: 2px solid #8a2be2; /* –î–æ–¥–∞—î —Ä–∞–º–∫—É –Ω–∞–≤–∫–æ–ª–æ –µ–ª–µ–º–µ–Ω—Ç–∞ (—Ç–æ–≤—â–∏–Ω–∞, —Å—Ç–∏–ª—å, –∫–æ–ª—ñ—Ä) */
border-radius: 8px; /* –ó–∞–æ–∫—Ä—É–≥–ª—é—î –∫—É—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 50% –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–ª–∞) */

/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è –≤—ñ–¥—Å—Ç—É–ø—ñ–≤ */
margin: 20px; /* –°—Ç–≤–æ—Ä—é—î –∑–æ–≤–Ω—ñ—à–Ω—ñ–π –≤—ñ–¥—Å—Ç—É–ø –Ω–∞–≤–∫–æ–ª–æ –µ–ª–µ–º–µ–Ω—Ç–∞, –≤—ñ–¥—à—Ç–æ–≤—Ö—É—é—á–∏ –π–æ–≥–æ –≤—ñ–¥ —ñ–Ω—à–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ */
padding: 15px; /* –°—Ç–≤–æ—Ä—é—î –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –≤—ñ–¥—Å—Ç—É–ø –º—ñ–∂ –≤–º—ñ—Å—Ç–æ–º –µ–ª–µ–º–µ–Ω—Ç–∞ —Ç–∞ –π–æ–≥–æ —Ä–∞–º–∫–æ—é */

/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è —Ä–æ–∑–º—ñ—Ä—ñ–≤ */
width: 100%; /* –í—Å—Ç–∞–Ω–æ–≤–ª—é—î —à–∏—Ä–∏–Ω—É –µ–ª–µ–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 100% –≤—ñ–¥ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞, –∞–±–æ 200px, 50%) */
height: auto; /* –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –≤–∏—Å–æ—Ç—É –µ–ª–µ–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, auto –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –≤–∏—Å–æ—Ç–∏, –∞–±–æ 150px) */

/* –Ü–Ω—à—ñ –∫–æ—Ä–∏—Å–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ */
opacity: 0.8; /* –í—Å—Ç–∞–Ω–æ–≤–ª—é—î —Ä—ñ–≤–µ–Ω—å –ø—Ä–æ–∑–æ—Ä–æ—Å—Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∞ (–≤—ñ–¥ 0 - –ø–æ–≤–Ω—ñ—Å—Ç—é –ø—Ä–æ–∑–æ—Ä–∏–π, –¥–æ 1 - –ø–æ–≤–Ω—ñ—Å—Ç—é –Ω–µ–ø—Ä–æ–∑–æ—Ä–∏–π) */
`;

const CosmicMissionStage2Css: React.FC<CosmicMissionStage2CssProps> = ({
  completed,
  onCompletionChange,
  cosmicEnergy,
  decreaseCosmicEnergy,
  challengeCompletion, // NEW
  onChallengeCompletionChange, // NEW
}) => {
  const [displayCommentedCss, setDisplayCommentedCss] = useState(false);
  // challengeCompletion state is now managed by parent and passed as prop

  useEffect(() => {
    try {
      const stored = localStorage.getItem(LOCAL_STORAGE_KEY_STAGE2);
      if (stored) {
        onCompletionChange(JSON.parse(stored));
      }
    } catch (error) {
      console.error("Failed to load cosmic mission stage 2 completion:", error);
    }
  }, [onCompletionChange]);

  useEffect(() => {
    try {
      localStorage.setItem(LOCAL_STORAGE_KEY_STAGE2, JSON.stringify(completed));
    } catch (error) {
      console.error("Failed to save stage 2 completion:", error);
    }
  }, [completed]);

  // No longer saving challengeCompletion here, it's handled by parent
  // useEffect(() => {
  //   try {
  //     localStorage.setItem(LOCAL_STORAGE_KEY_CHALLENGES, JSON.stringify(challengeCompletion));
  //   } catch (error) {
  //     console.error("Failed to save cosmic CSS challenges progress:", error);
  //   }
  //   const allChallengesCompleted = cssChallenges.every(challenge => challengeCompletion[challenge.id]);
  //   onCompletionChange(allChallengesCompleted);
  // }, [challengeCompletion, onCompletionChange]);

  // handleChallengeCompletionChange is now passed as prop

  const handleCopyCss = (version: 'uncommented' | 'commented') => {
    const textToCopy = version === 'commented' ? cssTemplateCommented : cssTemplateUncommented;
    navigator.clipboard.writeText(textToCopy);
    toast.success(`CSS-–∫–æ–¥ (${version === 'commented' ? '–∑ –∫–æ–º–µ–Ω—Ç–∞—Ä—è–º–∏' : '–±–µ–∑ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤'}) —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ! üé®`);
  };

  return (
    <Card className="mb-12 bg-card shadow-md">
      <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
        <CardTitle className="text-3xl font-bold text-foreground flex items-center gap-3">
          <Plane className="h-8 w-8 text-primary" />
          –ï—Ç–∞–ø 2: –î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –ì–∞–ª–∞–∫—Ç–∏–∫–∏ –°—Ç–∏–ª—ñ–≤ (CSS)
        </CardTitle>
        <div className="flex items-center space-x-2 no-print">
          <Checkbox
            id="stage2-completed"
            checked={completed}
            onCheckedChange={(checked: boolean) => onCompletionChange(checked)}
            className="h-6 w-6"
          />
          <Label htmlFor="stage2-completed" className="text-lg font-medium text-muted-foreground">
            –í–∏–∫–æ–Ω–∞–Ω–æ
          </Label>
        </div>
      </CardHeader>
      <CardContent>
        <p className="mb-4 text-muted-foreground">
          –¢–µ–ø–µ—Ä, –∫–æ–ª–∏ –∫–∞—Ä–∫–∞—Å —Ç–≤–æ—î—ó –∫–æ—Å–º—ñ—á–Ω–æ—ó –±–∞–∑–∏ –≥–æ—Ç–æ–≤–∏–π, —á–∞—Å –¥–æ–¥–∞—Ç–∏ –∫–æ–ª—å–æ—Ä–∏, —Å–≤—ñ—Ç–ª–æ —Ç–∞ —Ç–µ–∫—Å—Ç—É—Ä–∏! CSS ‚Äî —Ü–µ —Ç–≤–æ—ó –≤—ñ—Ä—Ç—É–∞–ª—å–Ω—ñ –ø–µ–Ω–∑–ª—ñ —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –¥–∏–∑–∞–π–Ω–µ—Ä–∞. –í—ñ–Ω –¥–æ–∑–≤–æ–ª—è—î –∑–º—ñ–Ω–∏—Ç–∏ –≤–∏–≥–ª—è–¥ –±—É–¥—å-—è–∫–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.
        </p>
        <p className="mb-4 text-muted-foreground">
          –©–æ–± —Ç–≤—ñ–π —Å–∞–π—Ç –ø–æ–±–∞—á–∏–≤ —Ü—ñ —Å—Ç–∏–ª—ñ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ CSS-—Ñ–∞–π–ª –¥–æ HTML. –î–æ–¥–∞–π —Ü–µ–π —Ä—è–¥–æ–∫ —É —Ä–æ–∑–¥—ñ–ª `&lt;head&gt;` —Ç–≤–æ–≥–æ HTML-—Ñ–∞–π–ª—É (–≤—ñ–Ω –≤–∂–µ —î —É —à–∞–±–ª–æ–Ω—ñ, —è–∫–∏–π —Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤):
        </p>
        <SyntaxHighlighter language="html" style={atomDark} customStyle={{ borderRadius: '8px', padding: '16px', fontSize: '0.9em', marginBottom: '20px' }}>
          {`<link rel="stylesheet" href="style.css">`}
        </SyntaxHighlighter>
        <p className="mb-4 text-muted-foreground text-sm">
          –ê –æ—Å—å —Å–ø–∏—Å–æ–∫ CSS-–≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π, —è–∫—ñ —Ç–∏ –º–æ–∂–µ—à –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏. –°–∫–æ–ø—ñ—é–π —ó—Ö —É –≤–∫–ª–∞–¥–∫—É <strong>CSS</strong> –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ Logika —ñ –∑–º—ñ–Ω—é–π –∑–Ω–∞—á–µ–Ω–Ω—è, —â–æ–± –ø—Ä–∏–∫—Ä–∞—Å–∏—Ç–∏ *—Å–≤—ñ–π –≤–ª–∞—Å–Ω–∏–π* —Å–∞–π—Ç!
        </p>
        
        <div className="relative mb-6">
          <h4 className="font-semibold mb-2 text-lg text-secondary-foreground">–¢–≤–æ—ó –ö–æ—Å–º—ñ—á–Ω—ñ –ü–µ–Ω–∑–ª—ñ:</h4>
          <div className="flex justify-end items-center gap-4 mb-2 no-print">
            <div className="flex items-center space-x-2">
              <Switch
                id="toggle-css-comments"
                checked={displayCommentedCss}
                onCheckedChange={setDisplayCommentedCss}
              />
              <Label htmlFor="toggle-css-comments" className="text-sm text-muted-foreground">
                {displayCommentedCss ? "–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –£–í–Ü–ú–ö–ù–ï–ù–û" : "–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –í–ò–ú–ö–ù–ï–ù–û"}
              </Label>
            </div>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button
                  className="bg-secondary text-secondary-foreground hover:bg-secondary/80"
                  size="sm"
                >
                  <Copy className="mr-2 h-4 w-4" /> –ö–æ–ø—ñ—é–≤–∞—Ç–∏ CSS
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end" className="bg-popover text-popover-foreground">
                <DropdownMenuItem onClick={() => handleCopyCss('uncommented')} className="cursor-pointer">
                  –ë–µ–∑ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤
                </DropdownMenuItem>
                <DropdownMenuItem onClick={() => handleCopyCss('commented')} className="cursor-pointer">
                  –ó –∫–æ–º–µ–Ω—Ç–∞—Ä—è–º–∏
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>
          <SyntaxHighlighter language="css" style={atomDark} customStyle={{ borderRadius: '8px', padding: '16px', fontSize: '0.9em', maxHeight: '500px', overflowY: 'auto' }}>
            {displayCommentedCss ? cssTemplateCommented : cssTemplateUncommented}
          </SyntaxHighlighter>
        </div>

        <Collapsible className="mt-6">
          <CollapsibleTrigger asChild>
            <Button variant="outline" className="w-full justify-between text-lg font-semibold text-secondary-foreground hover:bg-secondary/80 no-print">
              üé® –Ü–¥–µ—ó –¥–ª—è —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—ó —Ç–∞ –¥–æ–ø–æ–º–æ–≥–∞ (–ù–∞—Ç–∏—Å–Ω–∏, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è)
              <ChevronDown className="h-5 w-5 transition-transform data-[state=open]:rotate-180 chevron-icon" />
            </Button>
          </CollapsibleTrigger>
          <CollapsibleContent className="data-[state=open]:animate-collapsible-down data-[state=closed]:animate-collapsible-up overflow-hidden collapsible-content">
            <div className="p-4 border border-border rounded-b-md bg-muted mt-2 text-muted-foreground">
              <p className="mb-2">
                –©–æ–± –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ —Å—Ç–∏–ª—ñ –¥–æ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Ç–≤–æ–≥–æ —Å–∞–π—Ç—É, —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ:
              </p>
              <ul className="list-disc list-inside space-y-2 mb-4">
                <li><strong>–í–∏–±—Ä–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç:</strong> –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π <strong>CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä–∏</strong> (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–∞–∑–≤—É —Ç–µ–≥—É `body`, `h1`, `p`, `img`, `section` –∞–±–æ `footer`) —â–æ–± –≤–∫–∞–∑–∞—Ç–∏, –¥–æ —è–∫–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ —Å—Ç–∏–ª—å. –Ø–∫—â–æ —Ç–∏ –∑–∞–±—É–≤, —è–∫ –ø—Ä–∞—Ü—é—é—Ç—å —Å–µ–ª–µ–∫—Ç–æ—Ä–∏, –ø–µ—Ä–µ–≥–ª—è–Ω—å <Link to="/css-selectors" className="text-brand-primary hover:underline">–£—Ä–æ–∫: CSS –°–µ–ª–µ–∫—Ç–æ—Ä–∏</Link>.</li>
                <li><strong>–í–∏–±—Ä–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å:</strong> –û–±–µ—Ä–∏, —â–æ —Å–∞–º–µ —Ç–∏ —Ö–æ—á–µ—à –∑–º—ñ–Ω–∏—Ç–∏ (–∫–æ–ª—ñ—Ä, —Ä–æ–∑–º—ñ—Ä, —Ñ–æ–Ω —Ç–æ—â–æ). –Ø–∫—â–æ —Ç–∏ –∑–∞–±—É–≤, —è–∫—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —ñ—Å–Ω—É—é—Ç—å, –ø–µ—Ä–µ–≥–ª—è–Ω—å <Link to="/css-properties" className="text-brand-primary hover:underline">–£—Ä–æ–∫: CSS –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ</Link>.</li>
                <li><strong>–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è:</strong> –ü—Ä–∏–∑–Ω–∞—á —Ü—ñ–π –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –±–∞–∂–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `color: blue;` –∞–±–æ `font-size: 20px;`).</li>
              </ul>
              <p className="mb-2">
                –û—Å—å –¥–µ—è–∫—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ, —è–∫—ñ —Ç–∏ –º–æ–∂–µ—à —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–∏—Ç–∏:
              </p>
              <ul className="list-disc list-inside">
                <li><code>color</code>: –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É.</li>
                <li><code>background-color</code>: –ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É.</li>
                <li><code>font-size</code>: –†–æ–∑–º—ñ—Ä —à—Ä–∏—Ñ—Ç—É.</li>
                <li><code>font-family</code>: –¢–∏–ø —à—Ä–∏—Ñ—Ç—É.</li>
                <li><code>text-align</code>: –í–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É (`center`, `left`, `right`).</li>
                <li><code>margin</code>: –ó–æ–≤–Ω—ñ—à–Ω—ñ –≤—ñ–¥—Å—Ç—É–ø–∏ (–ø—Ä–æ—Å—Ç—ñ—Ä –Ω–∞–≤–∫–æ–ª–æ –µ–ª–µ–º–µ–Ω—Ç–∞).</li>
                <li><code>padding</code>: –í–Ω—É—Ç—Ä—ñ—à–Ω—ñ –≤—ñ–¥—Å—Ç—É–ø–∏ (–ø—Ä–æ—Å—Ç—ñ—Ä –º—ñ–∂ –≤–º—ñ—Å—Ç–æ–º —Ç–∞ —Ä–∞–º–∫–æ—é).</li>
                <li><code>border</code>: –†–∞–º–∫–∞ –Ω–∞–≤–∫–æ–ª–æ –µ–ª–µ–º–µ–Ω—Ç–∞.</li>
                <li><code>border-radius</code>: –ó–∞–æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤.</li>
                <li><code>text-decoration</code>: –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø—Ä–∏–±—Ä–∞—Ç–∏ –ø—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–Ω—è —É –ø–æ—Å–∏–ª–∞–Ω—å).</li>
                <li><code>opacity</code>: –ü—Ä–æ–∑–æ—Ä—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç–∞.</li>
                <li><code>width</code> / <code>height</code>: –®–∏—Ä–∏–Ω–∞ —Ç–∞ –≤–∏—Å–æ—Ç–∞ –µ–ª–µ–º–µ–Ω—Ç–∞.</li>
              </ul>
              <p className="mt-2">
                –ï–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É–π! –¢–∏ –º–æ–∂–µ—à –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ <Link to="/css-playground" className="text-brand-primary hover:underline">CSS –ú–∞–π—Å—Ç–µ—Ä–Ω—é</Link> –¥–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—ó –ø—Ä–∞–∫—Ç–∏–∫–∏, –∞ —Ç–∞–∫–æ–∂ <Link to="/examples" className="text-brand-primary hover:underline">–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –ü—Ä–∏–∫–ª–∞–¥–∏</Link>, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏, —è–∫ —ñ–Ω—à—ñ —Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤–∏–≥–ª—è–¥–∞—é—Ç—å —É –¥—ñ—ó.
              </p>
            </div>
          </CollapsibleContent>
        </Collapsible>

        {/* –û—Ä–±—ñ—Ç–∞–ª—å–Ω—ñ –ó–∞–≤–¥–∞–Ω–Ω—è */}
        <Collapsible className="mt-12" defaultOpen={true}>
          <CollapsibleTrigger asChild>
            <Button variant="outline" className="w-full justify-between text-lg font-semibold text-secondary-foreground hover:bg-secondary/80 no-print">
              <div className="flex items-center gap-2">
                <Lightbulb className="h-6 w-6 text-yellow-500" />
                –û—Ä–±—ñ—Ç–∞–ª—å–Ω—ñ –ó–∞–≤–¥–∞–Ω–Ω—è: –°—Ç–∏–ª—ñ–∑—É–π –°–≤–æ—é –ë–∞–∑—É!
              </div>
              <ChevronDown className="h-5 w-5 transition-transform data-[state=open]:rotate-180 chevron-icon" />
            </Button>
          </CollapsibleTrigger>
          <CollapsibleContent className="data-[state=open]:animate-collapsible-down data-[state=closed]:animate-collapsible-up overflow-hidden collapsible-content">
            <div className="p-4 border border-border rounded-b-md bg-muted mt-2 text-muted-foreground">
              <p className="mb-8 text-center max-w-2xl mx-auto text-muted-foreground">
                –í–∏–∫–æ–Ω–∞–π —Ü—ñ –º—ñ–Ω—ñ-–∑–∞–≤–¥–∞–Ω–Ω—è, —â–æ–± –Ω–∞–≤—á–∏—Ç–∏—Å—è –∑–∞—Å—Ç–æ—Å–æ–≤—É–≤–∞—Ç–∏ CSS-—Å—Ç–∏–ª—ñ –¥–æ —Å–≤–æ—î—ó –∫–æ—Å–º—ñ—á–Ω–æ—ó –±–∞–∑–∏. –ö–æ–∂–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –∫—Ä–∞—â–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —è–∫ –ø—Ä–∞—Ü—é—é—Ç—å –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ CSS!
              </p>

              {cssChallenges.map((challenge, index) => (
                <CosmicCssChallengeCard
                  key={challenge.id}
                  challengeNumber={index + 1}
                  challengeTitle={challenge.title}
                  challengeDescription={challenge.description}
                  initialCss={challenge.initialCss}
                  previewContent={challenge.previewContent}
                  hint={challenge.hint}
                  lessonLink={challenge.lessonLink}
                  lessonLinkText={challenge.lessonLinkText}
                  completed={!!challengeCompletion[challenge.id]}
                  onCompletionChange={(isChecked) => onChallengeCompletionChange(challenge.id, isChecked)}
                  cosmicEnergy={cosmicEnergy}
                  decreaseCosmicEnergy={decreaseCosmicEnergy}
                />
              ))}

              {completed && (
                <div className="mt-6 p-4 bg-green-100 text-green-800 border border-green-300 rounded-md text-center font-semibold">
                  üéâ –í—Å—ñ –û—Ä–±—ñ—Ç–∞–ª—å–Ω—ñ –ó–∞–≤–¥–∞–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ! –¢–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –º–∞–π—Å—Ç–µ—Ä —Å—Ç–∏–ª—ñ–≤! üéâ
                </div>
              )}
            </div>
          </CollapsibleContent>
        </Collapsible>
      </CardContent>
    </Card>
  );
};

export default CosmicMissionStage2Css;